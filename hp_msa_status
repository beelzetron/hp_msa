#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# Frank MÃ¼ller, fm@sysinit.de

# Work in progess!


hp_msa_status_map = { 0: "unkown" , 1: "unknown", 2: "unkown", 3: "ok", 4: "warning", 5: "critical" }
hp_msa_status_2nagios_map = { 'ok': 0, 'disabled' : 1, 'degraded': 2, 'failed': 2, 'unkown' : 3 }

def inventory_hp_msa_status(checkname, info):
	if len(info) > 0:
		return [ (line[0], None) for line in info ]
	else:
		return []

def check_hp_msa_status(item, params, info):
	for line in info:
		if line[0] == item:
			index, name, status = line
			snmp_status = hp_msa_status_map[int(status)]
			print snmp_status
			status	    = hp_msa_status_2nagios_map[snmp_status]
			return (status, '%s' % status) 
#			return (status, '%s - MSA overall status %s is in state %s' % 
#					(nagios_state_names[status], index, name, status, snmp_status))
	return (3, "UNKNOWN - item not found in snmp data")

check_info['hp_msa_status'] = (check_hp_msa_status, "MSA Overall Status", 0, inventory_hp_msa_status)

snmp_info["hp_msa_status"] = ( ".1.3.6.1.3.94.1.8.1", [
					"2.32.128.0.192.255.218.147.4.0.0.0.0.0.0.0.0.23", # Index 
					"3.32.128.0.192.255.218.147.4.0.0.0.0.0.0.0.0.23", # Name
					"4.32.128.0.192.255.218.147.4.0.0.0.0.0.0.0.0.23"  # Status, INT
			 ] )



#snmp_info["hp_msa_status"] = ( "1.3.6.1.3.94.1.8.1", [ "2", "3", "4" ] )

#snmp_info["hp_msa_status"] = ( ".1.3.6.1.3.94.1.8.1.3.32.128.0.192.255.218.147.4.0.0.0.0.0.0.0.0.", [ "23" ] ".1.3.6.1.3.94.1.8.1.4.32.128.0.192.255.218.147.4.0.0.0.0.0.0.0.0", [ "23" ]

#snmp_info["hp_msa"] = ( "1.3.6.1.3.94.1.8.1", [ 
#						 "1", #UNITID
#						 "2", #INDEX
#						 "3", #NAME
#						 "4", #STATUS, INT
#						 "5", #INFO, leer
#						 "6", #MESSAGE, der Wert selbst (Grad Temperatur)
#						 "7", #TYPE, INT
#						 "8", #CHARACTERISTIC, INT
#					  ])
#snmp_info["hp_msa_status"] = ( ".1.3.6.1.2.1.2.2.1", [ "2", "3", "8" ] )
